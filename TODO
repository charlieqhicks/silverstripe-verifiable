* Fix the tight-coupling that exists between Extension --> Service --> Chainpoint backend
* Hard-code "Created" and "LastEdited" fields into "verifiable_fields"
* When verifiable_fields are used, need to cache those and ensure the cached versions are only used in subsequent verification rounds
* When verifiable_fields are used, add "strict" mode config. It will strip_tags() prior to hashing. This will aid in upgrades, preventing style-specific markup from forming part of the verified hash
	- This config setting will also need to be persisted to the local DB in the "Extra" field, lest it be changed at a particular version
	- Why stop at HTML? What are we trying to achieve: Changes made that could affect "meaning": Alphanumeric content + spaces + newlines
	- In this event; We strip all content that _isn't_: "Alphanumerics", "spaces" and "newlines". This regime then needs to be persisted to the DB for re-use later.
* Use AsyncPHP to make the initial write call to the backend, wait ~15s and then request a proof in return
* Use silverstripe/crontask module to periodically query backends for a full proof
* Rename x2 DB fields declared in VerifiableExtension and prefix with 'v' or 'verifiable'
* Implement a basic Trillian backend
* Create a dedicated chainpointService that translates SS logic method names ala getProof() to gateway names ala proofs()
	./src/Backend/Chainpoint.php:     * @todo Rename to proofs() as per the "gateway" we're calling
	./src/Backend/Chainpoint.php:     * @todo Rename to hashes() as per the "gateway" we're calling
	./src/Backend/Chainpoint.php:     * @todo See the returned proof's "uris" key, to be able to call a specific URI for proof verification.
	./src/Backend/Chainpoint.php:     * @todo Use promises to send concurrent requests: 1). Find a node 2). Pass node URL to second request
* There are at least 3 submission requests for anchoring, but verification only pings one of these. Can the "base_uri" Guzzle\Client option accept an array of addresses/IPs?
* Handle exceptions from GuzzleHTTP\Client (e.g. timeout errors from curl) in Chainpoint::client()
* Add support for exporting in MsgPack format (http://msgpack.org/index.html)
* Add tests esp mocking Chainpoint responses
* ./src/Controller/VerificationController.php:        // @todo Beef this up to ensure that a basic regex is run over each to ensure it's all
* Add support for digital notarisation of arbitrary frontend form submissions and uploaded documents
* Add userland config to enable/disable hash-submission on create
* FIX weird versioned-pages bug
* Disable "Verify" button if "Proof" field is empty
* New: There's "Verified" status, there should also be a "Confirmed" status
* New: Add custom security checking on a controller-action by controller-action basis. Use the planned "VerifiableProvider" interface??
	Example: When we only want CMS-Ajax requests to access the /verifiable/verify action
* What to do about `Versioned::onAfterRollback()` - disallow rolling-back to previous version if it's verifiable (That is: It has populated "Proof" field)?
* Implement a backend for connecting directly to a local Bitcoind and Geth full node
* Remove dependency on silverstripe/cms. Should only need to depend on silverstripe/versioned
* Display selected version's proof, hash, UUID and Bitcoin TXID in the UI after a verification request
* Only submit changes to the backend:
	- On publish
	- [DONE] When the object exists()
